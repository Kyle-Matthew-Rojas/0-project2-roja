{"version":3,"sources":["MovieTableRow.js","MovieTable.js","MovieEditor.js","MovieDisplay.js","App.js","serviceWorker.js","index.js"],"names":["MovieTableRow","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","p","props","aMovie","react_default","a","createElement","id","name","price","className","Number","toFixed","onClick","editCallback","Component","MovieTable","colSpan","allMovies","map","MovieTableRow_MovieTableRow","MovieEditor","call","handleChange","ev","console","log","state","formData","target","persist","setState","handleClick","saveEditChanges","movie","disabled","onChange","cancelChange","MovieDisplay","startEditing","showEditor","selectedMovie","saveMovie","saveMovieDisplayCallBack","MovieEditor_MovieEditor","MovieTable_MovieTable","moviesDisplayed","App","saveData","collection","item","idCounter","concat","stored","movieItems","_this2","MovieDisplay_MovieDisplay","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56e7c206.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class MovieTableRow extends Component {\n\n    render() {\n        let p = this.props.aMovie;\n        return <tr>\n            <td>{ p.id }</td>\n            <td>{ p.name }</td>\n            <td>{ p.price}</td>\n            <td className=\"text-right\">${ Number(p.price).toFixed(2) }</td>\n            <td>\n                <button className=\"btn btn-sm btn-warning m-1\"\n                    onClick={ () => this.props.editCallback(p) }>\n                        Edit\n                </button>\n                                   \n            </td>\n        </tr>\n    }\n}\n","import React, { Component } from \"react\";\nimport { MovieTableRow } from \"./MovieTableRow\";\n\nexport class MovieTable extends Component {\n\n    render() {\n        return <table className=\"table table-sm table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"5\" \n                                className=\"bg-primary text-white text-center h4 p-2\">\n                            Writing Emphasis\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>ID</th>\n                        <th>Description</th>\n                        <th>Prefix</th>\n                        <th>Number</th>\n                        <th>Grade</th>\n                        <th>Edit</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.props.allMovies.map(p => \n                            <MovieTableRow aMovie={ p } \n                                key={ p.id }\n                                editCallback={ this.props.editCallback }\n                                />)\n                    }\n                </tbody>\n            </table>        \n    }\n}\n","import React, { Component } from \"react\";\n\nexport class MovieEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formData: {\n                id: props.movie.id || \"\",\n                name: props.movie.name || \"\",  \n                price: props.movie.price || \"\"\n            }\n        }\n    }\n\n    handleChange = (ev) => {\n        console.log(\"*** MovieEditor, handleClick()\"+ this.state.formData[ev.target.name]);\n        ev.persist();\n        this.setState(state => state.formData[ev.target.name] =  ev.target.value);\n    }\n\n    handleClick = () => {\n        console.log(\"*** MovieEditor, handleClick()\"+ this.state.formData.price);\n        this.props.saveEditChanges(this.state.formData);\n    }\n\n    render() {\n        return <div className=\"m-2\">\n            <div className=\"form-group\">\n                <label>ID</label>\n                <input className=\"form-control\" name=\"id\"\n                    disabled\n                    value={ this.state.formData.id }\n                    onChange={ this.handleChange } />\n            </div>\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input className=\"form-control\" name=\"name\"\n                    value={ this.state.formData.name }\n                    onChange={ this.handleChange } />\n            </div>                     \n            <div className=\"form-group\">\n                <label>Price</label>\n                <input className=\"form-control\" name=\"price\"\n                    value={ this.state.formData.price }\n                    onChange={ this.handleChange } />\n            </div>                          \n            <div className=\"text-center\">\n                <button className=\"btn btn-primary m-1\" \n                        onClick={ this.handleClick }>\n                    Save\n                </button>\n                <button className=\"btn btn-secondary\" \n                        onClick={ this.props.cancelChange }>\n                    Cancel\n                </button>                \n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { MovieTable } from \"./MovieTable\"\nimport { MovieEditor } from \"./MovieEditor\";\n\nexport class MovieDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showEditor: false,\n            selectedMovie: null\n        }\n    }\n\n    startEditing = (movie) => {\n        this.setState({ showEditor: true, selectedMovie: movie })\n    }\n\n\n    saveMovie = (movie) => {\n        console.log(\"*** in MovieDisplay, saveMovie(): \" + movie.id + \" \"+movie.price);\n        this.props.saveMovieDisplayCallBack(movie); // died here uncaught error type\n        this.setState({ showEditor: false, selectedMovie: null })        \n    }\n\n    render() {\n        if (this.state.showEditor) {\n            return <MovieEditor \n                key={ this.state.selectedMovie.id || -1 }\n                movie={ this.state.selectedMovie } \n                saveEditChanges={ this.saveMovie }\n                cancelChange = { this.saveMovie }\n                />\n        } else {\n            return <div className=\"m-2\">\n                <MovieTable allMovies={ this.props.moviesDisplayed }\n                    editCallback={ this.startEditing }\n                     />                                  \n            </div>\n        }\n    }\n}\n","import React from  \"react\";\nimport './App.css';\nimport { MovieDisplay }   from \"./MovieDisplay\";\n\nexport default class  App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieItems: [\n        {id: 1, name:\"Gone with the Wind\", price:20.0},\n        {id: 2, name:\"Mamamia\", price:30.0},\n        {id: 3, name:\"Song of the Music\", price:40},\n      ]\n    }\n    this.idCounter = 100;\n  }\n  saveData = (collection, item) => {\n    if (item.id === \"\") {\n        item.id = this.idCounter++;\n        this.setState(state => state[collection] \n            = state[collection].concat(item));\n    } else {\n        this.setState(state => state[collection] \n            = state[collection].map(stored => \n                  stored.id === item.id ? item: stored))\n    } \n}\ncancelChange = () => {\n \n}\n\nrender () {\n    return (\n      <div>\n        <MovieDisplay\n        name=\"IDontKnowWhatIsThisFor\"\n        moviesDisplayed={this.state.movieItems}\n        saveMovieDisplayCallBack= {p => this.saveData(\"movieItems\", p)}\n        cancelChange={this.cancelChange}\n         />\n      </div>\n    );\n  }\n  \n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import FilterableCourseTable from './FilterableCourseTable';\n//import writingCourses from './FilterableCourseTable';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n/*\nReactDOM.render(\n  <FilterableCourseTable courses={writingCourses} />,\n  document.getElementById('root')\n);*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}